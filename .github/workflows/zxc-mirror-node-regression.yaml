# SPDX-License-Identifier: Apache-2.0
name: "ZXC: Mirror Node Regression"
on:
  workflow_call:
    inputs:
      ref:
        description: "The branch, tag, or SHA to checkout:"
        required: false
        type: string
      custom-job-name:
        description: "The custom job name to use for the job:"
        required: false
        type: string
      solo-version:
        description: "The version of solo to install (if not specified, latest will be used):"
        required: false
        type: string
    secrets:
      access-token:
        description: "GitHub Access Token with write permissions to the repository."
        required: true
      slack-detailed-report-webhook:
        description: "Slack Webhook URL for TCK Monitoring."
        required: true

defaults:
  run:
    shell: bash

permissions:
  contents: read

env:
  SOLO_CLUSTER_NAME: "solo-mirror-node-e2e"
  SOLO_NAMESPACE: "solo-mirror-node-e2e"
  SOLO_DEPLOYMENT: "solo-mirror-node-deployment"
  SOLO_CLUSTER_SETUP_NAMESPACE: "solo-setup"
  GRADLE_EXEC: ionice -c 2 -n 2 nice -n 19 ./gradlew

jobs:
  # Execute Mirror Node Regression Tests using specified version of hiero-consensus-node
  mirror-node-regression:
    name: ${{ inputs.custom-job-name || 'Standard' }}
    runs-on: hiero-citr-linux-large
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911 # v2.13.0
        with:
          egress-policy: audit

      - name: Checkout Consensus Node
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          ref: ${{ inputs.ref || '' }}
          fetch-depth: 0

      - name: Setup Java
        uses: actions/setup-java@c5195efecf7bdfc987ee8bae7a71cb8b11521c00 # v4.7.1
        with:
          distribution: temurin
          java-version: 21.0.6

      - name: Install Helm
        uses: azure/setup-helm@1a275c3b69536ee54be43f2070a358922e12c8d4 # v4.3.1

      - name: Setup NodeJS Environment
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          node-version: 20.19.3

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@ac638b010cf58a27ee6c972d7336334ccaf61c96 # v4.4.1
        with:
          cache-read-only: false

      - name: Build hiero-consensus-node
        run: ${GRADLE_EXEC} assemble

      - name: Install Solo
        run: npm install -g @hashgraph/solo@${{ inputs.solo-version || 'latest' }}

      - name: Setup Kind
        uses: helm/kind-action@a1b0e391336a6ee6713a0583f8c6240d70863de3 # v1.12.0
        with:
          install_only: true
          node_image: kindest/node:v1.32.5@sha256:e3b2327e3a5ab8c76f5ece68936e4cafaa82edf58486b769727ab0b3b97a5b0d
          version: v0.29.0
          kubectl_version: v1.32.5
          verbosity: 3
          wait: 120s

      - name: Configure and run solo
        run: |
          set -ex
          cat <<EOF > mirror.yml
          test:
            annotations:
              helm.sh/hook-delete-policy: before-hook-creation
            env:
              HIERO_MIRROR_TEST_ACCEPTANCE_NETWORK: OTHER
            cucumberTags: "@acceptance and not @estimateprecompile"
            enabled: true
          EOF
          kind create cluster -n "${SOLO_CLUSTER_NAME}"
          solo init
          solo cluster-ref connect --cluster-ref "kind-${SOLO_CLUSTER_NAME}" --context "kind-${SOLO_CLUSTER_NAME}"
          solo deployment create -n "${SOLO_NAMESPACE}" --deployment "${SOLO_DEPLOYMENT}"
          solo deployment add-cluster --deployment "${SOLO_DEPLOYMENT}" --cluster-ref "kind-${SOLO_CLUSTER_NAME}" --num-consensus-nodes 1
          solo node keys --gossip-keys --tls-keys -i node1 --deployment "${SOLO_DEPLOYMENT}"
          solo cluster-ref setup --cluster-ref "kind-${SOLO_CLUSTER_NAME}" -s "${SOLO_CLUSTER_SETUP_NAMESPACE}"
          solo network deploy -i node1 --deployment "${SOLO_DEPLOYMENT}"
          solo node setup -i node1 --deployment "${SOLO_DEPLOYMENT}" --local-build-path ./hedera-node/data
          solo node start -i node1 --deployment "${SOLO_DEPLOYMENT}"
          solo mirror-node deploy --deployment "${SOLO_DEPLOYMENT}" --cluster-ref "kind-${SOLO_CLUSTER_NAME}" --pinger --values-file mirror.yml

      - name: Execute mirror node acceptance tests
        run: helm test mirror --filter name=mirror-acceptance --logs -n "${SOLO_NAMESPACE}" --timeout 30m

      - name: Stop Solo
        continue-on-error: true
        if: ${{ always() }}
        run: |
          kind delete cluster -n ${{ env.SOLO_CLUSTER_NAME }}

  report-mirror-node-regression-status:
    name: ${{ inputs.custom-job-name || 'Standard' }} Slack Report
    runs-on: hiero-citr-linux-medium
    needs: mirror-node-regression
    permissions:
      id-token: write
    if: ${{ always() }}
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911 # v2.13.0
        with:
          egress-policy: audit

      - name: Build Slack Payload Message
        id: payload
        run: |
          COLOR="#FF0000"
          if [[ "${{ needs.mirror-node-regression.result }}" == "success" ]]; then
            COLOR="#00FF00"
          elif [[ "${{ needs.mirror-node-regression.result }}" == "cancelled" ]]; then
            COLOR="#555555"
          fi
          cat <<EOF > slack_payload.json
          {
            "attachments": [
              {
                "color": "${COLOR}",
                "blocks": [
                  {
                    "type": "header",
                    "text": {
                      "type": "plain_text",
                      "text": ":vertical_traffic_light: Hiero Consensus Node - Mirror Node Regression Test Report",
                      "emoji": true
                    }
                  },
                  {
                    "type": "divider"
                  },
                  {
                    "type": "section",
                    "text": {
                      "type": "mrkdwn",
                      "text": "*Mirror Node Regression Panel was executed. See status below.*"
                    },
                    "fields": [
                      {
                        "type": "plain_text",
                        "text": "Mirror Node Regression Panel Result"
                      },
                      {
                        "type": "plain_text",
                        "text": "${{ needs.mirror-node-regression.result }}"
                      }
                    ]
                  },
                  {
                    "type": "divider"
                  },
                  {
                    "type": "section",
                    "text": {
                      "type": "mrkdwn",
                      "text": "*Workflow and Commit Information*"
                    },
                    "fields": [
                      {
                        "type": "mrkdwn",
                        "text": "*Source Commit*:"
                      },
                      {
                        "type": "mrkdwn",
                        "text": "<${{ github.server_url }}/${{ github.repository }}/commit/${{ inputs.ref }}>"
                      },
                      {
                        "type": "mrkdwn",
                        "text": "*Workflow run ID*:"
                      },
                      {
                        "type": "mrkdwn",
                        "text": " ${{ github.run_id }}"
                      },
                      {
                        "type": "mrkdwn",
                        "text": "*Workflow run URL*:"
                      },
                      {
                        "type": "mrkdwn",
                        "text": "<${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}>"
                      }
                    ]
                  }
                ]
              }
            ]
          }
          EOF

      - name: Report Status to Detailed Test Reports Channel
        uses: slackapi/slack-github-action@b0fa283ad8fea605de13dc3f449259339835fc52 # v2.1.0
        with:
          webhook: ${{ secrets.slack-detailed-report-webhook }}
          webhook-type: incoming-webhook
          payload-templated: true
          payload-file-path: slack_payload.json
